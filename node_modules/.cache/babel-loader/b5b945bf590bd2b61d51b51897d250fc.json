{"ast":null,"code":"var _jsxFileName = \"/Users/isaferrara/Desktop/Flink-intv/frontend/src/pages/Login.js\";\nimport React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from 'axios';\nimport { Card, Logo, Form, Input, Button, Error, HPLogin } from \"../components/AuthForms\";\nimport { useAuth } from \"../context/auth\";\n\nfunction Login(props) {\n  const [isLoggedInAdmin, setLoggedInAdmin] = useState(false);\n  const [isLoggedInStud, setLoggedInStud] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [user, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    setAuthTokens\n  } = useAuth();\n  let axiosConfig = {\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Content-Type': \"application/json, text/plain, */*\",\n      'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE'\n    }\n  };\n  const info = {\n    user: user,\n    password: password\n  };\n\n  function postLogin() {\n    axios({\n      url: 'http://ec2-52-37-61-68.us-west-2.compute.amazonaws.com:1234/api/v1/challenge/login',\n      method: 'POST',\n      data: info,\n      axiosConfig\n    }).then(result => {\n      if (result.status === 200 && result.data.staff === true) {\n        setAuthTokens(result.data);\n        setLoggedInAdmin(true);\n      } else if (result.status === 200 && result.data.staff === false) {\n        setAuthTokens(result.data);\n        setLoggedInStud(true);\n      } else {\n        setIsError(true);\n      }\n    }).catch(e => {\n      setIsError(true);\n    });\n  }\n\n  if (isLoggedInAdmin) {\n    console.log('admin');\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/admin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 12\n      }\n    });\n  } else if (isLoggedInStud) {\n    console.log('stud');\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/student\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(HPLogin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    src: 'https://i.pinimg.com/originals/1e/39/03/1e390396d7381a36a73407df5cc02fb1.png',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"user\",\n    value: user,\n    onChange: e => {\n      setUserName(e.target.value);\n    },\n    placeholder: \"user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    value: password,\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    placeholder: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: postLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Login\")), isError && /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, \"The username or password provided are incorrect!\")));\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/isaferrara/Desktop/Flink-intv/frontend/src/pages/Login.js"],"names":["React","useState","Redirect","axios","Card","Logo","Form","Input","Button","Error","HPLogin","useAuth","Login","props","isLoggedInAdmin","setLoggedInAdmin","isLoggedInStud","setLoggedInStud","isError","setIsError","user","setUserName","password","setPassword","setAuthTokens","axiosConfig","headers","info","postLogin","url","method","data","then","result","status","staff","catch","e","console","log","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from 'axios';\nimport { Card, Logo, Form, Input, Button, Error, HPLogin } from \"../components/AuthForms\";\nimport { useAuth } from \"../context/auth\";\n\nfunction Login(props) {\n  const [isLoggedInAdmin, setLoggedInAdmin] = useState(false);\n  const [isLoggedInStud, setLoggedInStud] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [user, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { setAuthTokens } = useAuth();\n\n  let axiosConfig = {\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Content-Type': \"application/json, text/plain, */*\",\n      'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE'\n    }\n  };\n\n  const info ={\n    user:user,\n    password: password\n  }\n\n  function postLogin() {\n    axios({url:'http://ec2-52-37-61-68.us-west-2.compute.amazonaws.com:1234/api/v1/challenge/login', \n    method: 'POST', \n    data: info,\n    axiosConfig\n  }).then(result => {\n      if ( result.status===200 && result.data.staff===true) {\n        setAuthTokens(result.data);\n        setLoggedInAdmin(true);\n      }else if(result.status===200 && result.data.staff===false){\n        setAuthTokens(result.data);\n        setLoggedInStud(true)\n      }else{\n        setIsError(true);\n      }\n    }).catch(e => {\n      setIsError(true);\n    });\n  }\n\n  if (isLoggedInAdmin){\n    console.log('admin');\n    return <Redirect to='/admin'/>\n  }else if (isLoggedInStud){\n    console.log('stud');\n    return <Redirect to='/student'/>\n  }\n\n\n  return (\n    <HPLogin>\n    <Card>\n      <Logo src={'https://i.pinimg.com/originals/1e/39/03/1e390396d7381a36a73407df5cc02fb1.png'} />\n      <Form>\n        <Input\n          type=\"user\"\n          value={user}\n          onChange={ e => {\n            setUserName(e.target.value);\n          }}\n          placeholder=\"user\"\n        />\n        <Input\n          type=\"password\"\n          value={password}\n          onChange={e => {\n            setPassword(e.target.value);\n          }}\n          placeholder=\"password\"\n        />\n        <Button onClick={postLogin}>Login</Button>\n      </Form>\n        { isError &&<Error>The username or password provided are incorrect!</Error> }\n    </Card>\n    </HPLogin>\n  );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}