{"ast":null,"code":"var _jsxFileName = \"/Users/isaferrara/Desktop/Flink-intv/frontend/src/context/auth.js\";\nimport React, { useState, createContext, useContext, useEffect, useMemo } from 'react';\nimport { currentUserFn } from '../services';\nexport const AuthContext = createContext();\nexport const useAuth = props => {\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    async function getSessionData() {\n      const {\n        data: currentUser\n      } = await currentUserFn();\n\n      if (currentUser) {\n        setUser(currentUser);\n      } else {\n        setUser(null);\n      }\n    }\n\n    getSessionData();\n  }, []);\n\n  const login = userInfo => setUser(userInfo);\n\n  const value = {\n    user,\n    login\n  };\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, Object.assign({}, props, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }\n  }));\n};\nexport const useContextInfo = () => useContext(AuthContext);","map":{"version":3,"sources":["/Users/isaferrara/Desktop/Flink-intv/frontend/src/context/auth.js"],"names":["React","useState","createContext","useContext","useEffect","useMemo","currentUserFn","AuthContext","useAuth","props","user","setUser","getSessionData","data","currentUser","login","userInfo","value","useContextInfo"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA2BC,aAA3B,EAA0CC,UAA1C,EAAsDC,SAAtD,EAAiEC,OAAjE,QAA+E,OAA/E;AACA,SAASC,aAAT,QAA8B,aAA9B;AAEA,OAAO,MAAMC,WAAW,GAAGL,aAAa,EAAjC;AAEP,OAAO,MAAMM,OAAO,GAAGC,KAAK,IAAI;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,IAAD,CAAhC;AAGAG,EAAAA,SAAS,CAAC,MAAM;AACf,mBAAeQ,cAAf,GAAgC;AAC9B,YAAM;AAAEC,QAAAA,IAAI,EAAEC;AAAR,UAAwB,MAAMR,aAAa,EAAjD;;AACA,UAAIQ,WAAJ,EAAiB;AACfH,QAAAA,OAAO,CAACG,WAAD,CAAP;AACD,OAFD,MAEO;AACLH,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF;;AACDC,IAAAA,cAAc;AACf,GAVS,EAUP,EAVO,CAAT;;AAaC,QAAMG,KAAK,GAAIC,QAAD,IAAcL,OAAO,CAACK,QAAD,CAAnC;;AAEA,QAAMC,KAAK,GAAG;AAAEP,IAAAA,IAAF;AAAQK,IAAAA;AAAR,GAAd;AAED,sBAAO,oBAAC,WAAD,CAAa,QAAb,oBAA0BN,KAA1B;AAAiC,IAAA,KAAK,EAAEQ,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAtBM;AAyBP,OAAO,MAAMC,cAAc,GAAG,MAAMf,UAAU,CAACI,WAAD,CAAvC","sourcesContent":["import React, {  useState, createContext, useContext, useEffect, useMemo} from 'react';\nimport { currentUserFn } from '../services'\n\nexport const AuthContext = createContext();\n\nexport const useAuth = props => {\n  const [user, setUser] = useState(null)\n\n\n  useEffect(() => {\n   async function getSessionData() {\n     const { data: currentUser } = await currentUserFn();\n     if (currentUser) {\n       setUser(currentUser);\n     } else {\n       setUser(null);\n     }\n   }\n   getSessionData();\n }, []);\n\n\n   const login = (userInfo) => setUser(userInfo);\n  \n   const value = { user, login };\n\n  return <AuthContext.Provider {...props} value={value} />\n}\n\n\nexport const useContextInfo = () => useContext(AuthContext);\n"]},"metadata":{},"sourceType":"module"}