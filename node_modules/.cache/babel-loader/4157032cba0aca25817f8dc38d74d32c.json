{"ast":null,"code":"import { useState, createContext, useContext, useEffect, useMemo } from \"react\";\nimport React from 'react';\nimport { currentUserFn } from './../services/auth';\nconst AppCtx = createContext();\nexport const CtxProvider = props => {\n  //  const [user, setUser] = useState(null)\n  useEffect(() => {\n    console.log('hola'); // async function getSessionData() {\n    //   const { data: currentUser } = await currentUserFn();\n    //   if (currentUser) {\n    //     setUser(currentUser);\n    //   } else {\n    //     setUser(null);\n    //   }\n    // }\n    // getSessionData();\n  }, []); //   const login = (userInfo) => setUser(userInfo);\n  //   const logout = _ => setUser(null)\n  //   const value = useMemo(() => ({ user, login, logout }), [user]);\n  //  return <AppCtx.Provider {...props} value={value} />\n};\nexport const useContextInfo = () => useContext(AppCtx);","map":{"version":3,"sources":["/Users/isaferrara/Desktop/ironhack/thumbnail/ThumbnailPicker/frontend/src/hooks/context.js"],"names":["useState","createContext","useContext","useEffect","useMemo","React","currentUserFn","AppCtx","CtxProvider","props","console","log","useContextInfo"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,aAAnB,EAAkCC,UAAlC,EAA8CC,SAA9C,EAAyDC,OAAzD,QAAwE,OAAxE;AACG,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AAEA,MAAMC,MAAM,GAAGN,aAAa,EAA5B;AAEA,OAAO,MAAMO,WAAW,GAAGC,KAAK,IAAI;AACnC;AAGCN,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EADc,CAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAXS,EAWP,EAXO,CAAT,CAJkC,CAkBnC;AAGA;AAEA;AAEA;AACA,CA1BM;AA4BP,OAAO,MAAMC,cAAc,GAAG,MAAMV,UAAU,CAACK,MAAD,CAAvC","sourcesContent":["import { useState, createContext, useContext, useEffect, useMemo } from \"react\"\n   import React from 'react'\n   import { currentUserFn } from './../services/auth'\n\n   const AppCtx = createContext()\n   \n   export const CtxProvider = props => {\n    //  const [user, setUser] = useState(null)\n\n\n     useEffect(() => {\n       console.log('hola')\n      // async function getSessionData() {\n      //   const { data: currentUser } = await currentUserFn();\n      //   if (currentUser) {\n      //     setUser(currentUser);\n      //   } else {\n      //     setUser(null);\n      //   }\n      // }\n      // getSessionData();\n    }, []);\n\n   \n    //   const login = (userInfo) => setUser(userInfo);\n\n\n    //   const logout = _ => setUser(null)\n     \n    //   const value = useMemo(() => ({ user, login, logout }), [user]);\n\n    //  return <AppCtx.Provider {...props} value={value} />\n   }\n   \n   export const useContextInfo = () => useContext(AppCtx);\n   \n"]},"metadata":{},"sourceType":"module"}