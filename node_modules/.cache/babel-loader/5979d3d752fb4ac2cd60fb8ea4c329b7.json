{"ast":null,"code":"var _jsxFileName = \"/Users/isaferrara/Desktop/Flink-intv/frontend/src/pages/Login.js\";\nimport React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from 'axios';\nimport { Card, Logo, Form, Input, Button, Error } from \"../components/AuthForms\";\nimport { useAuth } from \"../context/auth\";\n\nfunction Login(props) {\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [user, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    setAuthTokens\n  } = useAuth();\n  let axiosConfig = {\n    headers: {\n      'Content-Type': 'text/plain',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE'\n    }\n  };\n  const info = {\n    user: user\n  };\n\n  function postLogin() {\n    console.log(typeof user, typeof password, 'pasasdasd');\n    axios({\n      url: \"http://ec2-52-37-61-68.us-west-2.compute.amazonaws.com:1234/api/v1/challenge/login\",\n      method: 'POST'\n    }, user, password, axiosConfig).then(result => {\n      console.log(result);\n      setLoggedIn(true);\n\n      if (result.status === 200) {\n        setAuthTokens(result.data);\n        setLoggedIn(true);\n        return result.data.staff === true ? /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/admin\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 42\n          }\n        }) : /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/student\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 68\n          }\n        });\n      } else {\n        setIsError(true);\n      }\n    }).catch(e => {\n      setAuthTokens({\n        user: 'snape@hogwarts.com',\n        password: 'snape0109'\n      });\n      setLoggedIn(true);\n      setIsError(true);\n    });\n  }\n\n  if (isLoggedIn) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/student\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    src: 'https://i.pinimg.com/originals/1e/39/03/1e390396d7381a36a73407df5cc02fb1.png',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"user\",\n    value: user,\n    onChange: e => {\n      setUserName(e.target.value);\n    },\n    placeholder: \"user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    value: password,\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    placeholder: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: postLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Login\")), isError && /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"The username or password provided were incorrect!\"));\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/isaferrara/Desktop/Flink-intv/frontend/src/pages/Login.js"],"names":["React","useState","Redirect","axios","Card","Logo","Form","Input","Button","Error","useAuth","Login","props","isLoggedIn","setLoggedIn","isError","setIsError","user","setUserName","password","setPassword","setAuthTokens","axiosConfig","headers","info","postLogin","console","log","url","method","then","result","status","data","staff","catch","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from 'axios';\nimport { Card, Logo, Form, Input, Button, Error } from \"../components/AuthForms\";\nimport { useAuth } from \"../context/auth\";\n\nfunction Login(props) {\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [user, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { setAuthTokens } = useAuth();\n\n  let axiosConfig = {\n    headers: {\n      'Content-Type': 'text/plain',\n      'Access-Control-Allow-Origin' : '*',\n      'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE'\n    }\n  };\n\n  const info ={\n    user:user,\n    \n  }\n\n  function postLogin() {\n    console.log(typeof(user), typeof(password), 'pasasdasd')\n    axios({url:\"http://ec2-52-37-61-68.us-west-2.compute.amazonaws.com:1234/api/v1/challenge/login\", method: 'POST',  }, \n      user,\n      password\n    ,axiosConfig).then(\n      result => {\n        console.log(result)\n        setLoggedIn(true);\n      if (result.status === 200) {\n        setAuthTokens(result.data);\n        setLoggedIn(true);\n        return result.data.staff===true? <Redirect to='/admin' />: <Redirect to='/student'/>\n      } else {\n        setIsError(true);\n      }\n    }).catch(e => {\n      setAuthTokens({\n        user: 'snape@hogwarts.com',\n        password: 'snape0109'\n      });\n      setLoggedIn(true);\n      setIsError(true);\n    });\n  }\n\n  if (isLoggedIn) {\n    return <Redirect to='/student' />;\n  }\n\n  return (\n    <Card>\n      <Logo src={'https://i.pinimg.com/originals/1e/39/03/1e390396d7381a36a73407df5cc02fb1.png'} />\n      <Form>\n        <Input\n          type=\"user\"\n          value={user}\n          onChange={ e => {\n            setUserName(e.target.value);\n          }}\n          placeholder=\"user\"\n        />\n        <Input\n          type=\"password\"\n          value={password}\n          onChange={e => {\n            setPassword(e.target.value);\n          }}\n          placeholder=\"password\"\n        />\n        <Button onClick={postLogin}>Login</Button>\n      </Form>\n        { isError &&<Error>The username or password provided were incorrect!</Error> }\n    </Card>\n  );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}