{"ast":null,"code":"var _jsxFileName = \"/Users/isaferrara/Desktop/Flink-intv/frontend/src/pages/CharProfile.js\";\nimport React, { useEffect, useState } from 'react';\nimport getChar from '../services/getChar';\nimport { CardInfo, InfoColumn, ImgChar, LinkChar } from '../components/AuthForms';\n\nconst CharProfile = props => {\n  const name = props.match.params.name;\n  const [charactersHP, setCharacters] = useState([]);\n  useEffect(() => {\n    getChar().then(characters => setCharacters(characters)).catch(error => console.error(error));\n  }, []);\n  const student = charactersHP.filter(char => char.name === name);\n  console.log(student);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, student.map(character => /*#__PURE__*/React.createElement(LinkChar, {\n    key: character.name,\n    to: `/char/${character.name}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardInfo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ImgChar, {\n    src: character.image,\n    alt: character.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(InfoColumn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 29\n    }\n  }, \" Name: \", character.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 29\n    }\n  }, \"House: \", character.house), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 29\n    }\n  }, \"Birthday: \", character.dateOfBirth), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 29\n    }\n  }, \"Wand \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 29\n    }\n  }, \"Core:\", character.wand.core), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 29\n    }\n  }, character.wand.length), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 29\n    }\n  }, character.wand.wood), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }\n  }, character.patronus), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 29\n    }\n  }, character.species), character.alive === true ? /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 54\n    }\n  }, \" Alive\") : /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 71\n    }\n  }, \"Dead\"))))));\n};\n\nexport default CharProfile;","map":{"version":3,"sources":["/Users/isaferrara/Desktop/Flink-intv/frontend/src/pages/CharProfile.js"],"names":["React","useEffect","useState","getChar","CardInfo","InfoColumn","ImgChar","LinkChar","CharProfile","props","name","match","params","charactersHP","setCharacters","then","characters","catch","error","console","student","filter","char","log","map","character","image","house","dateOfBirth","wand","core","length","wood","patronus","species","alive"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,SAAQC,QAAR,EAAkBC,UAAlB,EAA8BC,OAA9B,EAAuCC,QAAvC,QAAsD,yBAAtD;;AAGA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAMC,IAAI,GAAED,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,IAA/B;AACA,QAAM,CAACG,YAAD,EAAeC,aAAf,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,OAAO,GACJY,IADH,CACSC,UAAD,IAAeF,aAAa,CAACE,UAAD,CADpC,EAEGC,KAFH,CAEUC,KAAD,IAAWC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAFpB;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAME,OAAO,GAAEP,YAAY,CAACQ,MAAb,CAAoBC,IAAI,IAAGA,IAAI,CAACZ,IAAL,KAAYA,IAAvC,CAAf;AAEAS,EAAAA,OAAO,CAACI,GAAR,CAAYH,OAAZ;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,CAACI,GAAR,CAAaC,SAAD,iBACP,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,SAAS,CAACf,IAAzB;AAA+B,IAAA,EAAE,EAAG,SAAQe,SAAS,CAACf,IAAK,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEe,SAAS,CAACC,KAAxB;AAA+B,IAAA,GAAG,EAAED,SAAS,CAACf,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYe,SAAS,CAACf,IAAtB,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWe,SAAS,CAACE,KAArB,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcF,SAAS,CAACG,WAAxB,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAASH,SAAS,CAACI,IAAV,CAAeC,IAAxB,CALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,SAAS,CAACI,IAAV,CAAeE,MAAnB,CANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIN,SAAS,CAACI,IAAV,CAAeG,IAAnB,CAPJ,eASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,SAAS,CAACQ,QAAd,CATJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIR,SAAS,CAACS,OAAd,CAVJ,EAWKT,SAAS,CAACU,KAAV,KAAkB,IAAlB,gBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAxB,gBAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAX9C,CAFJ,CADJ,CADL,CADH,CADJ;AA0BH,CAvCD;;AAwCA,eAAe3B,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport getChar from '../services/getChar'\nimport {CardInfo, InfoColumn, ImgChar, LinkChar} from '../components/AuthForms'\n\n\nconst CharProfile = (props) => {\n    const name= props.match.params.name\n    const [charactersHP, setCharacters] = useState([]);\n    \n    useEffect(() => {  \n      getChar()\n        .then((characters) =>setCharacters(characters))\n        .catch((error) => console.error(error));\n    }, []);\n\n    const student= charactersHP.filter(char=> char.name===name)\n\n    console.log(student)\n    return (\n        <div>\n          {student.map((character) => (\n                <LinkChar key={character.name} to={`/char/${character.name}` }>\n                    <CardInfo >\n                    <ImgChar src={character.image} alt={character.name}/>\n                        <InfoColumn>\n                            <h2> Name: {character.name}</h2>\n                            <p>House: {character.house}</p>\n                            <p>Birthday: {character.dateOfBirth}</p>\n                            <h3>Wand </h3>\n                            <p>Core:{character.wand.core}</p>\n                            <p>{character.wand.length}</p>\n                            <p>{character.wand.wood}</p>\n\n                            <p>{character.patronus}</p>\n                            <p>{character.species}</p>\n                            {character.alive===true? <h2> Alive</h2>: <h2>Dead</h2>}\n\n                        </InfoColumn>\n                    </CardInfo>\n\n                </LinkChar>\n            ))}\n        </div>\n    )\n}\nexport default CharProfile\n\n"]},"metadata":{},"sourceType":"module"}