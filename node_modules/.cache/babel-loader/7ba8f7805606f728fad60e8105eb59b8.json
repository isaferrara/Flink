{"ast":null,"code":"var _jsxFileName = \"/Users/isaferrara/Desktop/Flink-intv/frontend/src/pages/Login.js\";\nimport React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from 'axios';\nimport logoImg from \"../img/logo.jpg\";\nimport { Card, Logo, Form, Input, Button, Error } from \"../components/AuthForms\";\nimport { useAuth } from \"../context/auth\";\n\nfunction Login(props) {\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [user, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    setAuthTokens\n  } = useAuth();\n\n  const express = require('express');\n\n  const cors = require('cors');\n\n  const app = express();\n  app.use(cors({\n    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n    origin: ['http://localhost:3000'],\n    credentials: true,\n    optionsSuccessStatus: 200\n  }));\n  let axiosConfig = {\n    headers: {\n      'Content-Type': 'text/plain',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE'\n    }\n  };\n\n  function postLogin() {\n    axios.post(\"http://ec2-52-37-61-68.us-west-2.compute.amazonaws.com:1234/api/v1/challenge/login\", user, password, axiosConfig).then(result => {\n      console.log(result);\n      setLoggedIn(true);\n\n      if (result.status === 200) {\n        setAuthTokens(result.data);\n        setLoggedIn(true);\n        return result.data.staff === true ? /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/admin\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 42\n          }\n        }) : /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/student\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 68\n          }\n        });\n      } else {\n        setIsError(true);\n      }\n    }).catch(e => {\n      console.log(e, 'error');\n      setIsError(true);\n    });\n  }\n\n  if (isLoggedIn) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/admin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    src: logoImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"user\",\n    value: user,\n    onChange: e => {\n      setUserName(e.target.value);\n    },\n    placeholder: \"user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    value: password,\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    placeholder: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: postLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"Login\")), isError && /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, \"The username or password provided were incorrect!\"));\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/isaferrara/Desktop/Flink-intv/frontend/src/pages/Login.js"],"names":["React","useState","Redirect","axios","logoImg","Card","Logo","Form","Input","Button","Error","useAuth","Login","props","isLoggedIn","setLoggedIn","isError","setIsError","user","setUserName","password","setPassword","setAuthTokens","express","require","cors","app","use","methods","origin","credentials","optionsSuccessStatus","axiosConfig","headers","postLogin","post","then","result","console","log","status","data","staff","catch","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from 'axios';\nimport logoImg from \"../img/logo.jpg\";\nimport { Card, Logo, Form, Input, Button, Error } from \"../components/AuthForms\";\nimport { useAuth } from \"../context/auth\";\n\nfunction Login(props) {\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [user, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { setAuthTokens } = useAuth();\n  const express = require('express');\n  const cors = require('cors')\n\n  const app=express();\n\n\n  app.use(cors({\n    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n    origin: ['http://localhost:3000'],\n    credentials: true,\n    optionsSuccessStatus: 200,\n  }))\n  \n\n  \n\n  let axiosConfig = {\n    headers: {\n      'Content-Type': 'text/plain',\n      'Access-Control-Allow-Origin' : '*',\n      'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE'\n    }\n  };\n\n  function postLogin() {\n    axios.post(\"http://ec2-52-37-61-68.us-west-2.compute.amazonaws.com:1234/api/v1/challenge/login\", \n      user,\n      password\n    ,axiosConfig).then(\n      result => {\n        console.log(result)\n        setLoggedIn(true);\n      if (result.status === 200) {\n        setAuthTokens(result.data);\n        setLoggedIn(true);\n        return result.data.staff===true? <Redirect to='/admin' />: <Redirect to='/student'/>\n      } else {\n        setIsError(true);\n      }\n    }).catch(e => {\n      console.log(e, 'error')\n      setIsError(true);\n    });\n  }\n\n  if (isLoggedIn) {\n    return <Redirect to='/admin' />;\n  }\n\n  return (\n    <Card>\n      <Logo src={logoImg} />\n      <Form>\n        <Input\n          type=\"user\"\n          value={user}\n          onChange={ e => {\n            setUserName(e.target.value);\n          }}\n          placeholder=\"user\"\n        />\n        <Input\n          type=\"password\"\n          value={password}\n          onChange={e => {\n            setPassword(e.target.value);\n          }}\n          placeholder=\"password\"\n        />\n        <Button onClick={postLogin}>Login</Button>\n      </Form>\n        { isError &&<Error>The username or password provided were incorrect!</Error> }\n    </Card>\n  );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}