{"ast":null,"code":"var _jsxFileName = \"/Users/isaferrara/Desktop/Flink-intv/frontend/src/pages/Login.js\";\nimport React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from 'axios';\nimport { Card, Logo, Form, Input, Button, Error } from \"../components/AuthForms\";\nimport { useAuth } from \"../context/auth\";\n\nfunction Login(props) {\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [user, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const {\n    setAuthTokens\n  } = useAuth();\n  let axiosConfig = {\n    headers: {\n      'Content-Type': 'text/plain',\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE'\n    }\n  };\n  const info = {\n    user: user,\n    password: password\n  };\n\n  function postLogin() {\n    axios({\n      url: \"http://ec2-52-37-61-68.us-west-2.compute.amazonaws.com:1234/api/v1/challenge/login\",\n      method: 'POST',\n      data: info\n    }).then(result => {\n      if (result.status === 200) {\n        setAuthTokens(result.data);\n\n        if (result.data.staff === true, 'yeiii') {\n          console.log(result, 'yeeii');\n          setLoggedIn(true);\n          return /*#__PURE__*/React.createElement(Redirect, {\n            to: \"/admin\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 20\n            }\n          });\n        } else {\n          setLoggedIn(true);\n          return /*#__PURE__*/React.createElement(Redirect, {\n            to: \"/student\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }\n          });\n        }\n      } else {\n        setIsError(true);\n      }\n    }).catch(e => {\n      setIsError(true);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    src: 'https://i.pinimg.com/originals/1e/39/03/1e390396d7381a36a73407df5cc02fb1.png',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"user\",\n    value: user,\n    onChange: e => {\n      setUserName(e.target.value);\n    },\n    placeholder: \"user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    value: password,\n    onChange: e => {\n      setPassword(e.target.value);\n    },\n    placeholder: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: postLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Login\")), isError && /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"The username or password provided were incorrect!\"));\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/isaferrara/Desktop/Flink-intv/frontend/src/pages/Login.js"],"names":["React","useState","Redirect","axios","Card","Logo","Form","Input","Button","Error","useAuth","Login","props","isLoggedIn","setLoggedIn","isError","setIsError","user","setUserName","password","setPassword","setAuthTokens","axiosConfig","headers","info","postLogin","url","method","data","then","result","status","staff","console","log","catch","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from 'axios';\nimport { Card, Logo, Form, Input, Button, Error } from \"../components/AuthForms\";\nimport { useAuth } from \"../context/auth\";\n\nfunction Login(props) {\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [user, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const { setAuthTokens } = useAuth();\n\n  let axiosConfig = {\n    headers: {\n      'Content-Type': 'text/plain',\n      'Access-Control-Allow-Origin' : '*',\n      'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE'\n    }\n  };\n\n  const info ={\n    user:user,\n    password: password\n  }\n\n  function postLogin() {\n    axios({url:\"http://ec2-52-37-61-68.us-west-2.compute.amazonaws.com:1234/api/v1/challenge/login\", \n    method: 'POST',  \n    data: info\n  }).then(result => {\n      if (result.status === 200) {\n        setAuthTokens(result.data);\n        if(result.data.staff===true, 'yeiii'){\n          console.log(result, 'yeeii' )\n            setLoggedIn(true);\n            return <Redirect to='/admin' />\n        } else{\n          setLoggedIn(true);\n          return<Redirect to='/student'/>\n        }    \n      } else {\n        setIsError(true);\n      }\n    }).catch(e => {\n      setIsError(true);\n    });\n  }\n\n\n  return (\n    <Card>\n      <Logo src={'https://i.pinimg.com/originals/1e/39/03/1e390396d7381a36a73407df5cc02fb1.png'} />\n      <Form>\n        <Input\n          type=\"user\"\n          value={user}\n          onChange={ e => {\n            setUserName(e.target.value);\n          }}\n          placeholder=\"user\"\n        />\n        <Input\n          type=\"password\"\n          value={password}\n          onChange={e => {\n            setPassword(e.target.value);\n          }}\n          placeholder=\"password\"\n        />\n        <Button onClick={postLogin}>Login</Button>\n      </Form>\n        { isError &&<Error>The username or password provided were incorrect!</Error> }\n    </Card>\n  );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}