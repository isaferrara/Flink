{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport Preview from './Preview';\n/* istanbul ignore next */\n\nexport var context = /*#__PURE__*/React.createContext({\n  previewUrls: new Map(),\n  setPreviewUrls: function setPreviewUrls() {\n    return null;\n  },\n  current: null,\n  setCurrent: function setCurrent() {\n    return null;\n  },\n  setShowPreview: function setShowPreview() {\n    return null;\n  },\n  setMousePosition: function setMousePosition() {\n    return null;\n  },\n  registerImage: function registerImage() {\n    return function () {\n      return null;\n    };\n  }\n});\nvar Provider = context.Provider;\n\nvar Group = function Group(_ref) {\n  var _ref$previewPrefixCls = _ref.previewPrefixCls,\n      previewPrefixCls = _ref$previewPrefixCls === void 0 ? 'rc-image-preview' : _ref$previewPrefixCls,\n      children = _ref.children,\n      _ref$icons = _ref.icons,\n      icons = _ref$icons === void 0 ? {} : _ref$icons;\n\n  var _useState = useState(new Map()),\n      _useState2 = _slicedToArray(_useState, 2),\n      previewUrls = _useState2[0],\n      setPreviewUrls = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      current = _useState4[0],\n      setCurrent = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isShowPreview = _useState6[0],\n      setShowPreview = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      mousePosition = _useState8[0],\n      setMousePosition = _useState8[1];\n\n  var registerImage = function registerImage(id, url) {\n    var unRegister = function unRegister() {\n      setPreviewUrls(function (oldPreviewUrls) {\n        var clonePreviewUrls = new Map(oldPreviewUrls);\n        var deleteResult = clonePreviewUrls.delete(id);\n        return deleteResult ? clonePreviewUrls : oldPreviewUrls;\n      });\n    }; // we don't need to test this if canPreview changed when url stays the same\n\n    /* istanbul ignore next */\n\n\n    if (previewUrls.get(id) === url) {\n      return unRegister;\n    }\n\n    setPreviewUrls(function (oldPreviewUrls) {\n      return new Map(oldPreviewUrls).set(id, url);\n    });\n    return unRegister;\n  };\n\n  var onPreviewClose = function onPreviewClose(e) {\n    e.stopPropagation();\n    setShowPreview(false);\n    setMousePosition(null);\n  };\n\n  return /*#__PURE__*/React.createElement(Provider, {\n    value: {\n      isPreviewGroup: true,\n      previewUrls: previewUrls,\n      setPreviewUrls: setPreviewUrls,\n      current: current,\n      setCurrent: setCurrent,\n      setShowPreview: setShowPreview,\n      setMousePosition: setMousePosition,\n      registerImage: registerImage\n    }\n  }, children, /*#__PURE__*/React.createElement(Preview, {\n    \"aria-hidden\": !isShowPreview,\n    visible: isShowPreview,\n    prefixCls: previewPrefixCls,\n    onClose: onPreviewClose,\n    mousePosition: mousePosition,\n    src: previewUrls.get(current),\n    icons: icons\n  }));\n};\n\nexport default Group;","map":null,"metadata":{},"sourceType":"module"}