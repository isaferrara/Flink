{"ast":null,"code":"var _jsxFileName = \"/Users/isaferrara/Desktop/ironhack/thumbnail/ThumbnailPicker/frontend/src/hooks/context.js\";\nimport { useState, createContext, useContext, useEffect, useMemo } from \"react\";\nimport React from 'react';\nimport { currentUserFn } from '../services/auth.js';\nconst AppCtx = createContext();\n\nconst CtxProvider = props => {\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    console.log(user, 'hola');\n\n    async function getSessionData() {\n      const {\n        data: currentUser\n      } = await currentUserFn();\n\n      if (currentUser) {\n        setUser(currentUser);\n      } else {\n        setUser(null);\n      }\n    }\n\n    getSessionData();\n  }, []);\n\n  const login = userInfo => setUser(userInfo);\n\n  const logout = _ => setUser(null);\n\n  const value = useMemo(() => ({\n    user,\n    login,\n    logout\n  }), [user]);\n  return /*#__PURE__*/React.createElement(AppCtx.Provider, Object.assign({}, props, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport const useContextInfo = () => useContext(AppCtx);","map":{"version":3,"sources":["/Users/isaferrara/Desktop/ironhack/thumbnail/ThumbnailPicker/frontend/src/hooks/context.js"],"names":["useState","createContext","useContext","useEffect","useMemo","React","currentUserFn","AppCtx","CtxProvider","props","user","setUser","console","log","getSessionData","data","currentUser","login","userInfo","logout","_","value","useContextInfo"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,aAAnB,EAAkCC,UAAlC,EAA8CC,SAA9C,EAAyDC,OAAzD,QAAwE,OAAxE;AACG,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,qBAA9B;AAEA,MAAMC,MAAM,GAAGN,aAAa,EAA5B;;AAED,MAAMO,WAAW,GAAGC,KAAK,IAAI;AAC1B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,IAAD,CAAhC;AAGAG,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkB,MAAlB;;AACD,mBAAeI,cAAf,GAAgC;AAC9B,YAAM;AAAEC,QAAAA,IAAI,EAAEC;AAAR,UAAwB,MAAMV,aAAa,EAAjD;;AACA,UAAIU,WAAJ,EAAiB;AACfL,QAAAA,OAAO,CAACK,WAAD,CAAP;AACD,OAFD,MAEO;AACLL,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF;;AACDG,IAAAA,cAAc;AACf,GAXS,EAWP,EAXO,CAAT;;AAcC,QAAMG,KAAK,GAAIC,QAAD,IAAcP,OAAO,CAACO,QAAD,CAAnC;;AAGA,QAAMC,MAAM,GAAGC,CAAC,IAAIT,OAAO,CAAC,IAAD,CAA3B;;AAEA,QAAMU,KAAK,GAAGjB,OAAO,CAAC,OAAO;AAAEM,IAAAA,IAAF;AAAQO,IAAAA,KAAR;AAAeE,IAAAA;AAAf,GAAP,CAAD,EAAkC,CAACT,IAAD,CAAlC,CAArB;AAED,sBAAO,oBAAC,MAAD,CAAQ,QAAR,oBAAqBD,KAArB;AAA4B,IAAA,KAAK,EAAEY,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CA1BF;;AA4BC,OAAO,MAAMC,cAAc,GAAG,MAAMpB,UAAU,CAACK,MAAD,CAAvC","sourcesContent":["import { useState, createContext, useContext, useEffect, useMemo } from \"react\"\n   import React from 'react'\n   import { currentUserFn } from '../services/auth.js'\n\n   const AppCtx = createContext()\n   \n  const CtxProvider = props => {\n     const [user, setUser] = useState(null)\n\n\n     useEffect(() => {\n       console.log(user, 'hola')\n      async function getSessionData() {\n        const { data: currentUser } = await currentUserFn();\n        if (currentUser) {\n          setUser(currentUser);\n        } else {\n          setUser(null);\n        }\n      }\n      getSessionData();\n    }, []);\n\n   \n      const login = (userInfo) => setUser(userInfo);\n\n\n      const logout = _ => setUser(null)\n     \n      const value = useMemo(() => ({ user, login, logout }), [user]);\n\n     return <AppCtx.Provider {...props} value={value} />\n   }\n   \n   export const useContextInfo = () => useContext(AppCtx);\n   \n"]},"metadata":{},"sourceType":"module"}