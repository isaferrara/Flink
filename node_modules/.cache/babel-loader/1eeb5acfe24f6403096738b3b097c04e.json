{"ast":null,"code":"var _jsxFileName = \"/Users/isaferrara/Desktop/Flink-intv/frontend/src/context/auth.js\";\nimport React, { useState, createContext, useContext, useEffect, useMemo } from 'react';\nimport { currentUserFn } from '../services';\nexport const AuthContext = createContext();\nexport const CtxProvider = props => {\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    async function getSessionData() {\n      const {\n        data: currentUser\n      } = await currentUserFn();\n\n      if (currentUser) {\n        setUser(currentUser);\n      } else {\n        setUser(null);\n      }\n    }\n\n    getSessionData();\n  }, []);\n\n  const login = userInfo => setUser(userInfo);\n\n  const logout = _ => setUser(null);\n\n  const value = useMemo(() => ({\n    user,\n    login,\n    logout\n  }), [user]);\n  return /*#__PURE__*/React.createElement(AppCtx.Provider, Object.assign({}, props, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }\n  }));\n};\nexport function useAuth() {\n  const [user, setUser] = useState(null);\n  return useContext(AuthContext);\n}","map":{"version":3,"sources":["/Users/isaferrara/Desktop/Flink-intv/frontend/src/context/auth.js"],"names":["React","useState","createContext","useContext","useEffect","useMemo","currentUserFn","AuthContext","CtxProvider","props","user","setUser","getSessionData","data","currentUser","login","userInfo","logout","_","value","useAuth"],"mappings":";AAAA,OAAOA,KAAP,IAAiBC,QAAjB,EAA2BC,aAA3B,EAA0CC,UAA1C,EAAsDC,SAAtD,EAAiEC,OAAjE,QAA+E,OAA/E;AACA,SAASC,aAAT,QAA8B,aAA9B;AAEA,OAAO,MAAMC,WAAW,GAAGL,aAAa,EAAjC;AAEP,OAAO,MAAMM,WAAW,GAAGC,KAAK,IAAI;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,IAAD,CAAhC;AAGAG,EAAAA,SAAS,CAAC,MAAM;AACf,mBAAeQ,cAAf,GAAgC;AAC9B,YAAM;AAAEC,QAAAA,IAAI,EAAEC;AAAR,UAAwB,MAAMR,aAAa,EAAjD;;AACA,UAAIQ,WAAJ,EAAiB;AACfH,QAAAA,OAAO,CAACG,WAAD,CAAP;AACD,OAFD,MAEO;AACLH,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF;;AACDC,IAAAA,cAAc;AACf,GAVS,EAUP,EAVO,CAAT;;AAaC,QAAMG,KAAK,GAAIC,QAAD,IAAcL,OAAO,CAACK,QAAD,CAAnC;;AAGA,QAAMC,MAAM,GAAGC,CAAC,IAAIP,OAAO,CAAC,IAAD,CAA3B;;AAEA,QAAMQ,KAAK,GAAGd,OAAO,CAAC,OAAO;AAAEK,IAAAA,IAAF;AAAQK,IAAAA,KAAR;AAAeE,IAAAA;AAAf,GAAP,CAAD,EAAkC,CAACP,IAAD,CAAlC,CAArB;AAED,sBAAO,oBAAC,MAAD,CAAQ,QAAR,oBAAqBD,KAArB;AAA4B,IAAA,KAAK,EAAEU,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAzBM;AA2BP,OAAO,SAASC,OAAT,GAAmB;AACxB,QAAM,CAACV,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,IAAD,CAAhC;AAEA,SAAOE,UAAU,CAACI,WAAD,CAAjB;AACD","sourcesContent":["import React, {  useState, createContext, useContext, useEffect, useMemo} from 'react';\nimport { currentUserFn } from '../services'\n\nexport const AuthContext = createContext();\n\nexport const CtxProvider = props => {\n  const [user, setUser] = useState(null)\n\n\n  useEffect(() => {\n   async function getSessionData() {\n     const { data: currentUser } = await currentUserFn();\n     if (currentUser) {\n       setUser(currentUser);\n     } else {\n       setUser(null);\n     }\n   }\n   getSessionData();\n }, []);\n\n\n   const login = (userInfo) => setUser(userInfo);\n\n\n   const logout = _ => setUser(null)\n  \n   const value = useMemo(() => ({ user, login, logout }), [user]);\n\n  return <AppCtx.Provider {...props} value={value} />\n}\n\nexport function useAuth() {\n  const [user, setUser] = useState(null)\n\n  return useContext(AuthContext);\n}"]},"metadata":{},"sourceType":"module"}