{"ast":null,"code":"var _jsxFileName = \"/Users/isaferrara/Desktop/Flink-intv/frontend/src/context/auth.js\";\nimport { useState, createContext, useContext, useEffect, useMemo } from 'react';\nexport const AuthContext = createContext();\nexport const CtxProvider = props => {\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    async function getSessionData() {\n      const {\n        data: currentUser\n      } = await currentUserFn();\n\n      if (currentUser) {\n        setUser(currentUser);\n      } else {\n        setUser(null);\n      }\n    }\n\n    getSessionData();\n  }, []);\n\n  const login = userInfo => setUser(userInfo);\n\n  const logout = _ => setUser(null);\n\n  const value = useMemo(() => ({\n    user,\n    login,\n    logout\n  }), [user]);\n  return /*#__PURE__*/React.createElement(AppCtx.Provider, Object.assign({}, props, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }\n  }));\n};\nexport function useAuth() {\n  const [user, setUser] = useState(null);\n  return useContext(AuthContext);\n}","map":{"version":3,"sources":["/Users/isaferrara/Desktop/Flink-intv/frontend/src/context/auth.js"],"names":["useState","createContext","useContext","useEffect","useMemo","AuthContext","CtxProvider","props","user","setUser","getSessionData","data","currentUser","currentUserFn","login","userInfo","logout","_","value","useAuth"],"mappings":";AAAA,SAAUA,QAAV,EAAoBC,aAApB,EAAmCC,UAAnC,EAA+CC,SAA/C,EAA0DC,OAA1D,QAAwE,OAAxE;AAEA,OAAO,MAAMC,WAAW,GAAGJ,aAAa,EAAjC;AACP,OAAO,MAAMK,WAAW,GAAGC,KAAK,IAAI;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,IAAD,CAAhC;AAGAG,EAAAA,SAAS,CAAC,MAAM;AACf,mBAAeO,cAAf,GAAgC;AAC9B,YAAM;AAAEC,QAAAA,IAAI,EAAEC;AAAR,UAAwB,MAAMC,aAAa,EAAjD;;AACA,UAAID,WAAJ,EAAiB;AACfH,QAAAA,OAAO,CAACG,WAAD,CAAP;AACD,OAFD,MAEO;AACLH,QAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF;;AACDC,IAAAA,cAAc;AACf,GAVS,EAUP,EAVO,CAAT;;AAaC,QAAMI,KAAK,GAAIC,QAAD,IAAcN,OAAO,CAACM,QAAD,CAAnC;;AAGA,QAAMC,MAAM,GAAGC,CAAC,IAAIR,OAAO,CAAC,IAAD,CAA3B;;AAEA,QAAMS,KAAK,GAAGd,OAAO,CAAC,OAAO;AAAEI,IAAAA,IAAF;AAAQM,IAAAA,KAAR;AAAeE,IAAAA;AAAf,GAAP,CAAD,EAAkC,CAACR,IAAD,CAAlC,CAArB;AAED,sBAAO,oBAAC,MAAD,CAAQ,QAAR,oBAAqBD,KAArB;AAA4B,IAAA,KAAK,EAAEW,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAzBM;AA2BP,OAAO,SAASC,OAAT,GAAmB;AACxB,QAAM,CAACX,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,IAAD,CAAhC;AAEA,SAAOE,UAAU,CAACG,WAAD,CAAjB;AACD","sourcesContent":["import {  useState, createContext, useContext, useEffect, useMemo} from 'react';\n\nexport const AuthContext = createContext();\nexport const CtxProvider = props => {\n  const [user, setUser] = useState(null)\n\n\n  useEffect(() => {\n   async function getSessionData() {\n     const { data: currentUser } = await currentUserFn();\n     if (currentUser) {\n       setUser(currentUser);\n     } else {\n       setUser(null);\n     }\n   }\n   getSessionData();\n }, []);\n\n\n   const login = (userInfo) => setUser(userInfo);\n\n\n   const logout = _ => setUser(null)\n  \n   const value = useMemo(() => ({ user, login, logout }), [user]);\n\n  return <AppCtx.Provider {...props} value={value} />\n}\n\nexport function useAuth() {\n  const [user, setUser] = useState(null)\n\n  return useContext(AuthContext);\n}"]},"metadata":{},"sourceType":"module"}