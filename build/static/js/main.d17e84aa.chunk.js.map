{"version":3,"sources":["context/auth.js","PrivateRoute.js","components/AuthForms.js","components/NavBar.js","pages/Home.js","services/getChar.js","components/Gryffindor.js","components/Slytherin.js","components/Hufflepuff.js","components/Ravenclaw.js","components/Staff.js","pages/Admin.js","pages/SwitchTo.js","components/StaffStudents.js","pages/Student.js","pages/NotFound.js","pages/CharProfile.js","pages/Login.js","App.js","index.js"],"names":["AuthContext","createContext","useAuth","useContext","PrivateRoute","Component","component","rest","authTokens","render","props","to","Card","styled","div","Title","HP","HPLogin","Form","TextExtra","h2","Name","h1","Input","input","Button","Link","ButtonHarry","ButtonSnape","ButtonHome","Logo","img","Status","Error","Wrap","CardChar","CardInfo","CardProfile","CardProfileNameSearch","InfoColumn","ExtraInfos","InfoRow","DivSpace","ImgHouse","ImgChar","ImgCharProfile","LinkChar","Header","Layout","NavBar","setAuthTokens","logOut","className","style","width","height","display","justifyContent","theme","mode","Item","key","staff","onClick","Home","getCharacters","myHeaders","Headers","fetch","headers","then","res","json","catch","alert","Gryffindor","useState","charactersHP","setCharacters","useEffect","getChar","characters","error","console","gryffindorStudents","filter","char","house","hogwartsStudent","map","character","name","src","image","alt","Slytherin","slytherinStudents","i","Hufflepuff","hufflepuffStudents","Ravenclaw","ravenclawStudents","Staff","professors","Admin","marginTop","toUpperCase","SwitchTo","StaffStudents","Student","NotFound","status","title","subTitle","extra","type","CharProfile","match","params","useForm","form","extras","setExtra","student","submitForm","e","info","charAt","slice","textAlign","dateOfBirth","patronus","ancestry","wand","core","length","wood","alive","layout","onFinish","label","placeholder","Option","value","block","htmlType","Login","isLoggedInAdmin","setLoggedInAdmin","isLoggedInStud","setLoggedInStud","isError","setIsError","user","setUserName","password","setPassword","onChange","target","method","body","result","data","log","App","Provider","localStorage","setItem","JSON","stringify","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d17e84aa.chunk.js","sourcesContent":["import {  createContext, useContext} from 'react';\n\n\n//create context to save the user's information \nexport const AuthContext = createContext();\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAuth } from \"./context/auth\";\n\n  // esta ruta privada va a ser usada en las rutas que requieran autenticación \n  /* recibe\n    component: () => {…}\n  y ...rest son los parametros restantes\n  {\n    computedMatch: {path: \"/student\", url: \"/student\", isExact: true, params: {…}}\n    exact: true\n    location: {pathname: \"/student\", search: \"\", hash: \"\", state: undefined, key: \"uedmkm\"}\n    path: \"/student\"\n  }\n  */\nfunction PrivateRoute( { component: Component, ...rest }) {\n  const { authTokens } = useAuth();\n\n  return (\n    <Route\n      {...rest}\n      //si hay usuario render el componente, sino mandarlo a login\n      render=\n      {props => authTokens ? \n        (<Component {...props} />\n        ) : (\n        <Redirect to={\"/login\"}/>\n        )\n      }\n    />\n  );\n}\n\nexport default PrivateRoute;","import styled from 'styled-components';\nimport { Link} from 'react-router-dom'\n\n//estilos de componentes\n\nconst Card = styled.div`\n  box-sizing: border-box;\n  max-width: 410px;\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: #F0F0F0;\n  margin: 3vh auto 0 auto;\n  background: rgba( 255, 255, 255, 0.35 );\n  box-shadow: 0 8px 32px 0 rgba( 31, 38, 135, 0.37 );\n  backdrop-filter: blur( 6.0px );\n  -webkit-backdrop-filter: blur( 6.0px );\n  border-radius: 10px;\n`;\n\nconst Title = styled.div`\n  box-sizing: border-box;\n  width: 100%;\n  padding: 2rem;\n  display: flex;\n  flex-direction: column; \n  align-items: center;\n`;\n\nconst HP = styled.div`\n  background-image: url('https://i.pinimg.com/originals/46/6b/6d/466b6d5e575a9d8eabbc97ce34d07993.png');\n  height: 100vh;\n  width: 100%;\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\nconst HPLogin = styled.div`\n  background-image: url('https://wallpaper.dog/large/5862.jpg');\n  height: 100vh;\n  width: 100%;\n  position: absolute;\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n\nconst Form = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nconst TextExtra = styled.h2`\n    position: relative;\n    left: 120px;\n    font-size: 30px;\n`;\n\nconst Name = styled.h1`\n    position: relative;\n    left: 150px;\n    top: 130px;\n    font-size: 30px;\n`;\n\nconst Input = styled.input`\n  padding: 1rem;\n  border: none;\n  margin-bottom: 1rem;\n  font-size: 0.8rem;\n`;\n\n\nconst Button = styled(Link)`\n  text-align: center;\n  background: linear-gradient(to bottom, #6371c7, #5563c1);\n  border: none;\n  border-radius: 3px;\n  padding: 1rem;\n  color: white;\n  font-weight: 700;\n  width: 100%;\n  margin-bottom: 1rem;\n  font-size: 0.8rem;\n  &:hover {\n    background: #6A5BC7;\n    color: white;\n   }\n`;\nconst ButtonHarry = styled(Link)`\n  margin-right: 40px;\n  border: none;\n  width: 100px;\n  height: 100px;\n  background-image: url('https://i.kinja-img.com/gawker-media/image/upload/c_scale,f_auto,fl_progressive,pg_1,q_80,w_800/unbtcdjirvsj8nzlzkk9.jpg');\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  box-shadow: 0 8px 32px 0 rgba( 128,128,128, 0.47 );\n  border-radius: 50%;\n  &:hover {\n    background-image: url('https://i.pinimg.com/originals/93/04/92/930492582b793746cafcecf4b0216dac.jpg');\n    background-size: 280%;\n    background-position: 50% 10%;\n\n   }\n`;\nconst ButtonSnape = styled(Link)`\n  margin-left: 40px;\n  border: none;\n  width: 100px;\n  height: 100px;\n  background-image: url('https://lh3.googleusercontent.com/-YxW_sbBC1co/TWlQVHUltJI/AAAAAAAAABQ/lDs_enlptzA/s1600/snape6.jpg');\n  background-repeat: no-repeat;\n  background-position: 100%;\n  background-size: cover;\n  box-shadow: 0 8px 32px 0 rgba( 128,128,128, 0.47 );\n  border-radius: 50%;\n  &:hover {\n    background-image: url('http://images5.fanpop.com/image/photos/29400000/Snape-snapes-family-and-friends-29400302-355-500.jpg');\n    background-position: 50% 1%;\n    background-size: 170%;\n   }\n`;\n\nconst ButtonHome = styled(Link)`\n  background: #FFD300;\n  border: none;\n  text-decoration: none;\n  border-radius: 3px;\n  padding: 20px 60px;\n  color: black;\n  font-weight: 700;\n  position:relative;\n  top: 75vh;\n  left: 44%;\n  width: 200px;\n  height: 100px;\n  font-size: 0.8rem;\n`;\n\nconst Logo = styled.img`\n  width: 50%;\n  margin-bottom: 1rem;\n`;\n\nconst Status = styled.img`\n  width: 100px;\n  margin-bottom: 20px; \n`;\n\nconst Error = styled.div`\n  background-color: #E65843;\n  padding: 10px;\n  font-size: 14px;\n  color: white;\n`;\n\nconst Wrap = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  justify-content: space-around;\n  margin: 30px\n`;\n\nconst CardChar = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align:center;\n`;\nconst CardInfo= styled.div`\n  border-radius: 20px;\n  background-color: white;\n  box-shadow: 4px 8px 89px -12px rgba(118,118,118,0.22);\n  width: 420px;\n  height: 250px;\n  margin: 10px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst CardProfile= styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\n\nconst CardProfileNameSearch= styled.div`\n  border-radius: 20px;\n  background-color: white;\n  padding: 3%;\n  max-height: 70vh;\n  box-shadow: 4px 8px 89px -12px rgba(118,118,118,0.22);\n  margin: 5% 10% 10% 10%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst InfoColumn= styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: black;\n`;\n\nconst ExtraInfos= styled.div`\n  left: 20px;\n  display: flex;\n  position:relative;\n  left: 130px;\n  bottom: 130px;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst InfoRow= styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  color: black;\n  flex-wrap: wrap;\n`;\n\nconst DivSpace= styled.div`\n  margin: 40px;\n`;\n\nconst ImgHouse = styled.img` \n    width: 80px;\n`;\nconst ImgChar = styled.img` \n    width: 170px;\n    height: 200px;\n    border-radius: 10px;\n    margin: 30px;\n`;\nconst ImgCharProfile = styled.img` \n    width: 300px;\n    height: 400px;\n    border-radius: 10px;\n    margin:30px;\n`;\n\nconst LinkChar = styled(Link)` \n    text-decoration: none;\n\n`;\n\n\nexport {HP, ImgCharProfile, ButtonHarry, ButtonSnape, TextExtra, Title, HPLogin, ButtonHome, CardProfileNameSearch, Form, Input, Button, Logo, \n  ExtraInfos, Card, Error, Wrap, CardChar, CardInfo, InfoColumn, ImgHouse, ImgChar, LinkChar, \n  CardProfile,InfoRow, DivSpace, Status, Name };","import React from 'react'\nimport { useAuth } from \"../context/auth\";\nimport {Menu, Layout} from 'antd'\nimport {Link} from 'react-router-dom'\nconst { Header} = Layout;\n\n\nconst NavBar = () => {\n    const { authTokens, setAuthTokens} = useAuth();\n\n    function logOut() {\n        setAuthTokens();\n      }\n\n    return (\n<Header className=\"header\" style={{width:'100%', height:'70px'}}>\n        <div className=\"logo\" style={{display:'flex', justifyContent:'right'}}/>\n        <Menu theme=\"dark\" mode=\"horizontal\"  >\n            <Menu.Item key=\"1\">\n                <Link to=\"/\">\n                Home\n                </Link>\n            </Menu.Item>\n            {/* si eres staff, te dirige a admin, sino a student */}\n            {!authTokens? \n                <>       \n                <Menu.Item key=\"3\" onClick={logOut}>\n                    <Link to=\"/login\"  >\n                    Login\n                    </Link>\n                </Menu.Item>\n            </> :\n            authTokens.staff===true ? <>       \n                <Menu.Item key=\"2\">\n                <Link to=\"/admin\">\n                    Directory\n                </Link>\n                </Menu.Item>\n                <Menu.Item key=\"3\" onClick={logOut}>\n                    <Link to=\"/login\"  >\n                    Logout\n                    </Link>\n                </Menu.Item>\n            </> : <>\n                <Menu.Item key=\"4\" >\n                    <Link to=\"/student\"  >\n                    Directory\n                    </Link>\n                </Menu.Item>\n                <Menu.Item key=\"5\" onClick={logOut}>\n                    <Link to=\"/login\"  >\n                    Logout\n                    </Link>\n                </Menu.Item>\n                </> }\n        </Menu>\n      </Header>\n    )\n}\nexport default NavBar","import React from \"react\";\nimport { HP , ButtonHome} from \"../components/AuthForms\";\nimport NavBar from \"../components/NavBar\";\n\nfunction Home () {\n  return( \n  <HP>\n  <NavBar/>\n  <ButtonHome to='/login'> Login</ButtonHome>\n  </HP>\n  );\n}\n\nexport default Home;","\n// fetch character info from API \n//GET name, species, gender, house, dateOfBirth,\n// yearOfBirth, ancestry, eyeColour, hairColour,\n// wand {wood, core, length}, patronus, hogwartsStudent, \n//hogwartsStaff, actor, alive, image\nfunction getCharacters() {\n\n  var myHeaders = new Headers({\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n    'Access-Control-Allow-Credentials': 'true',\n    'Access-Control-Allow-Methods': 'POST, GET, OPTIONS, DELETE'\n  });\n\n    return fetch('https://hp-api.herokuapp.com/api/characters',{\n      headers: myHeaders\n    } \n  ).then((res) =>\n      res.json()\n    )\n    .catch(()=>alert('Hola, tuve un problema con CORS en Safari, cambia a Chrome por favor <3, gracias espero que te guste mi trabajo!'))\n  }\n\n  export default getCharacters\n\n  // alert('Hola, tuve un problema con CORS en Safari, cambia a Chrome por favor <3, gracias espero que te guste mi trabajo!')","import React, { useEffect, useState } from 'react';\nimport getChar from '../services/getChar'\nimport {Wrap, CardChar, CardInfo, InfoColumn, ImgHouse, ImgChar, LinkChar} from './AuthForms'\n\n\n//Componente con información general de personajes si pertenecen a Gryffindor\n\nconst Gryffindor = () => {\n    const [charactersHP, setCharacters] = useState([]);\n    \n\n     // Usamos useEffect para ejecutar la funcion llama a nuestros\n    // personajes cuando se renderiza nuestro componente\n    useEffect(() => {  \n      getChar()\n        .then((characters) =>setCharacters(characters))\n        .catch((error) => console.error(error));\n    }, []);\n\n     // filtramos los personajes para solo mostrar al que son estudiantes de Gryffindor\n    const gryffindorStudents= charactersHP.filter(char=> char.house==='Gryffindor' && char.hogwartsStudent===true)\n\n    return (\n        <CardChar>\n            <h1>Gryffindor</h1>\n            <Wrap>\n            {gryffindorStudents.map((character) => (\n                <LinkChar key={character.name} to={`/char/${character.name}` }>\n                    <CardInfo >\n                    <ImgChar src={character.image} alt={character.name}/>\n                        <InfoColumn>\n                        <ImgHouse src={'https://i.pinimg.com/originals/4b/bb/81/4bbb816e7a69c34c45a0faf452f10b06.gif'} alt={'Gryffindor'}/>\n                            <h2 >{character.name}</h2>\n                            <h3>{character.house}</h3>\n                        </InfoColumn>\n                    </CardInfo>\n\n                </LinkChar>\n            ))}\n            </Wrap>\n        </CardChar>\n    )\n}\nexport default Gryffindor","import React, { useEffect, useState } from 'react';\nimport getChar from '../services/getChar'\nimport {Wrap, CardChar, CardInfo, InfoColumn, ImgHouse, ImgChar, LinkChar} from './AuthForms'\n\n//Componente con información general de personajes si pertenecen a Slytherin\n\n\nexport const Slytherin = () => {\n    const [charactersHP, setCharacters] = useState([]);\n\n\n    // Usamos useEffect para ejecutar la funcion llama a nuestros\n    // personajes cuando se renderiza nuestro componente    \n    useEffect(() => {  \n      getChar()\n        .then((characters) =>setCharacters(characters))\n        .catch((error) => console.error(error));\n    }, []); \n\n     // filtramos los personajes para solo mostrar al que son estudiantes de Slytherin\n    const slytherinStudents= charactersHP.filter(char=> char.house==='Slytherin'&& char.hogwartsStudent===true)\n\n    return (\n        <CardChar>\n            <h1>Slytherin</h1>\n            <Wrap>\n            {slytherinStudents.map((character, i) => (\n                <LinkChar key={character.name} to={`/char/${character.name}`}>\n                <CardInfo  key={i}>\n                <ImgChar src={character.image} alt={character.name}/>\n                        <InfoColumn>\n                        <ImgHouse src={'https://miro.medium.com/max/500/0*m0pYj25tg4A2mAfU.png'} alt={'Slytherin'}/>\n                            <h2 >{character.name}</h2>\n                            <h3>{character.house}</h3>\n                        </InfoColumn>\n                    </CardInfo>\n                </LinkChar>\n            ))}\n            </Wrap>\n        </CardChar>\n    )\n}\nexport default Slytherin","import React, { useEffect, useState } from 'react';\nimport getChar from '../services/getChar'\nimport {Wrap, CardChar, CardInfo, InfoColumn, ImgHouse, ImgChar, LinkChar} from './AuthForms'\n\n//Componente con información general de personajes si pertenecen a Hufflepuff\n\n\nconst Hufflepuff = () => {\n    const [charactersHP, setCharacters] = useState([]);\n\n    // Usamos useEffect para ejecutar la funcion llama a nuestros\n    // personajes cuando se renderiza nuestro componente\n    useEffect(() => {  \n    getChar()\n        .then((characters) =>setCharacters(characters))\n        .catch((error) => console.error(error));\n    }, []); \n\n     // filtramos los personajes para solo mostrar al que son estudiantes de Hufflepuff\n    const hufflepuffStudents= charactersHP.filter(char=> char.house==='Hufflepuff'&& char.hogwartsStudent===true)\n\n    return (\n        <CardChar>\n            <h1>Hufflepuff</h1>\n            <Wrap>\n            {hufflepuffStudents.map((character, i) => (\n                <LinkChar key={character.name} to={`/char/${character.name}`}>\n                    <CardInfo  key={i}>\n                    <ImgChar src={character.image} alt={character.name}/>\n                        <InfoColumn>\n                        <ImgHouse src={'https://i.pinimg.com/originals/3d/af/c1/3dafc187a67cd577508762150985f65c.png'} alt={'Hufflepuff'}/>\n                            <h2 >{character.name}</h2>\n                            <h3>{character.house}</h3>\n                        </InfoColumn>\n                    </CardInfo>\n                </LinkChar>\n            ))}\n            </Wrap>\n        </CardChar>\n    )\n}\nexport default Hufflepuff","import React, { useEffect, useState } from 'react';\nimport getChar from '../services/getChar'\nimport {Wrap, CardChar, CardInfo, InfoColumn, ImgHouse, ImgChar, LinkChar} from './AuthForms'\n\n//Componente con información general de personajes si pertenecen a Ravenclaw\n\n\nconst Ravenclaw = () => {\n    const [charactersHP, setCharacters] = useState([]);\n\n     // Usamos useEffect para ejecutar la funcion llama a nuestros\n    // personajes cuando se renderiza nuestro componente\n    useEffect(() => {  \n      getChar()\n        .then((characters) =>setCharacters(characters))\n        .catch((error) => console.error(error));\n    }, []); \n\n    // filtramos los personajes para solo mostrar al que son estudiantes de Ravenclaw\n    const ravenclawStudents= charactersHP.filter(char=> char.house==='Ravenclaw' && char.hogwartsStudent===true)\n\n\n    return (\n        <CardChar>\n            <h1>Ravenclaw</h1>\n            <Wrap>\n            {ravenclawStudents.map((character, i ) => (\n                <LinkChar key={character.name} to={`/char/${character.name}`}>\n                    <CardInfo  key={i}>\n                    <ImgChar src={character.image} alt={character.name}/>\n                        <InfoColumn>\n                        <ImgHouse src={'https://i.pinimg.com/originals/df/90/1d/df901d445f6f31cbddf080fc4a3d4639.png'} alt={'Ravenclaw'}/>\n                            <h2 >{character.name}</h2>\n                            <h3>{character.house}</h3>\n                        </InfoColumn>\n                    </CardInfo>\n                </LinkChar>\n            ))}\n            </Wrap>\n        </CardChar>\n\n    )\n}\nexport default Ravenclaw","import React, { useEffect, useState } from 'react';\nimport getChar from '../services/getChar'\nimport {Wrap, CardChar, CardInfo, InfoColumn, ImgHouse, ImgChar, LinkChar} from './AuthForms'\n\n//Componente con información general de personajes si son del staff de Hogwarts, \n// este se muestra solo al staff \n\nconst Staff = () => {\n    const [charactersHP, setCharacters] = useState([]);\n    // Usamos useEffect para ejecutar la funcion llama a nuestros\n    // personajes cuando se renderiza nuestro componente\n    useEffect(() => {  \n      getChar()\n        .then((characters) =>setCharacters(characters))\n        .catch((error) => console.error(error));\n    }, []);\n\n    // filtramos los personajes para solo mostrar al que no son estudiantes\n    const professors= charactersHP.filter(char=>  char.hogwartsStudent===false)\n\n    return (\n        <CardChar>\n            <Wrap>\n            {professors.map((character, i) => (\n                <LinkChar key={character.name} to={`/char/${character.name}`}>\n                    <CardInfo  key={i}>\n                    <ImgChar src={character.image} alt={character.name}/>\n                        <InfoColumn>\n                        <ImgHouse src={'https://i.pinimg.com/originals/1e/39/03/1e390396d7381a36a73407df5cc02fb1.png'} alt={'Staff'}/>\n                            <h2 >{character.name}</h2>\n                            <h3>{character.house}</h3>\n                        </InfoColumn>\n                    </CardInfo>\n                </LinkChar>\n            ))}\n            </Wrap>\n        </CardChar>\n    )\n}\nexport default Staff","import React from \"react\";\nimport { useAuth } from \"../context/auth\";\nimport Gryffindor from '../components/Gryffindor';\nimport Slytherin from '../components/Slytherin';\nimport Hufflepuff from '../components/Hufflepuff';\nimport Ravenclaw from '../components/Ravenclaw';\nimport Staff from '../components/Staff';\nimport { CardChar, Title} from '../components/AuthForms'\nimport NavBar from '../components/NavBar';\nimport { Divider } from \"antd\";\n\n//Aquí vemos la página para los prodesores, es muy similar a la de estudiantes excepto que \n//ellos pueden entrar al perfil de los profesores y a la de los estudantes\nfunction Admin() {\n\n  //authTokens contain name,house and if they're staff\n  const {authTokens } = useAuth();\n\n  return (\n    <CardChar>\n    <NavBar/>\n        <Title>      \n        {/* si de authTokens.staff===true es que es profesor, sino es estudiante */}\n      {authTokens.staff===true? <h3> Staff's Page</h3>: <h1> Student's Page</h1>}\n            <h1 style={{marginTop: '30px'}}>WELCOME {authTokens.name.toUpperCase()}</h1>\n            <h3 style={{ width: '700px'}}>You have access to all the information you Accio (require).<br/>\n            To logout say \"mischief managed\" (or you could just Logout).</h3>\n        </Title>\n        <Divider>Students </Divider>\n            <Gryffindor/>\n            <Slytherin/>\n            <Hufflepuff/>\n            <Ravenclaw/>\n        <Divider>Staff</Divider>\n            <Staff/>\n    </CardChar>\n  );\n}\n\nexport default Admin;","import React from 'react'\n\nconst SwitchTo = () => {\n    return (\n        <div>\n            <h1>Pease switch your browser to Google Chrome, Safari doesn´t allow this connection</h1>\n        </div>\n    )\n}\nexport default SwitchTo","import React, { useEffect, useState } from 'react';\nimport getChar from '../services/getChar'\nimport {Wrap, CardChar, CardInfo, InfoColumn, ImgChar, ImgHouse} from './AuthForms'\n\n//Componente con información general de personajes si son del staff de Hogwarts, \n// este se muestra solo a los estudiantes\n\nconst StaffStudents = () => {\n    const [charactersHP, setCharacters] = useState([]);\n\n    // Usamos useEffect para ejecutar la funcion llama a nuestros\n    // personajes cuando se renderiza nuestro componente\n    useEffect(() => {  \n      getChar()\n        .then((characters) =>setCharacters(characters))\n        .catch((error) => console.error(error));\n    }, []);\n    \n    // filtramos los personajes para solo mostrar al que no son estudiantes\n    const professors= charactersHP.filter(char=>  char.hogwartsStudent===false)\n\n    return (\n        <CardChar>\n            <Wrap>\n            {professors.map((character, i) => (\n                    <CardInfo  key={character.name}>\n                    <ImgChar src={character.image} alt={character.name}/>\n                        <InfoColumn>\n                        <ImgHouse src={'https://i.pinimg.com/originals/1e/39/03/1e390396d7381a36a73407df5cc02fb1.png'} alt={'Staff'}/>\n                            <h2 >{character.name}</h2>\n                            <h3>{character.house}</h3>\n                        </InfoColumn>\n                    </CardInfo>\n            ))}\n            </Wrap>\n        </CardChar>\n    )\n}\nexport default StaffStudents","import React from \"react\";\nimport { useAuth } from \"../context/auth\";\nimport Gryffindor from '../components/Gryffindor';\nimport Slytherin from '../components/Slytherin';\nimport Hufflepuff from '../components/Hufflepuff';\nimport Ravenclaw from '../components/Ravenclaw';\nimport StaffStudents from \"../components/StaffStudents\";\nimport { CardChar, Title} from '../components/AuthForms'\nimport NavBar from '../components/NavBar';\nimport { Divider } from \"antd\";\n\n//Aquí vemos la página para los estudiantes, es muy similar a la de profesores excepto que \n//ellos no pueden entrar al perfil de los profesores, solo ver su info básica \nexport const Student = () => {\n    const { authTokens } = useAuth();\n\n    return (\n        <CardChar>\n            <NavBar/>\n            <Title>\n                {/* si authTokens es es verdadera, es que es profesor, sino es estudiante */}\n                {authTokens.staff===true? <h3> Staff's Page</h3>: <h3> Student's Page</h3>}\n\n                <h1 style={{marginTop: '30px'}}>WELCOME <br/><b>{authTokens.name.toUpperCase()}</b>!</h1>\n                <h4 style={{ width: '700px'}}>You can only access the students' information, everything else is in the Forbidden Section.\n                <br/>\n                To logout say \"mischief managed\" (or you could just Logout).</h4>\n            </Title>\n            <Divider>Students</Divider>\n                <Gryffindor/>\n                <Slytherin/>\n                <Hufflepuff/>\n                <Ravenclaw/>\n            <Divider>Staff</Divider>\n                <StaffStudents/>\n        </CardChar>\n    )\n}\n\nexport default Student","import { Result, Button } from 'antd';\nimport { Link} from 'react-router-dom'\nimport React from 'react'\n\nexport const NotFound = () => {\n    return (\n        <div>\n            <Result\n            status=\"404\"\n            title=\"404\"\n            subTitle=\"Sorry, the page you visited does not exist.\"\n            extra={<Link to={'/'}><Button type=\"primary\">Home</Button></Link>}\n  />,\n        </div>\n    )\n}\nexport default NotFound","import React, { useEffect, useState } from 'react';\nimport getChar from '../services/getChar'\nimport NavBar from '../components/NavBar';\nimport {CardProfile,\n    Status,\n    ExtraInfos,\n    ImgCharProfile,\n    CardProfileNameSearch,\n    InfoRow, \n    DivSpace,\n    InfoColumn,\n    TextExtra,\n    Name\n} from '../components/AuthForms'\nimport {\n    Select,\n    Form,\n    Button\n} from 'antd'\n\n\n//Componente con información detallada de el personaje seleccionado\n\nconst CharProfile = (props) => {\n    const name= props.match.params.name\n    const [form] = Form.useForm()\n    const [charactersHP, setCharacters] = useState([]);\n    const [extras, setExtra] = useState([]);\n\n    // Usamos useEffect para ejecutar la funcion llama a nuestros\n    // personajes cuando se renderiza nuestro componente \n    // el [] es para indicar que solo se ejecuta una vez\n    useEffect(() => {  \n      getChar()\n        .then((characters) =>setCharacters(characters))\n        .catch((error) => console.error(error));\n    }, []);\n    \n    \n    // filtramos los personajes para solo mostrar al que recibimos en los props \n    const student= charactersHP.filter(char=> char.name===name)\n\n    function submitForm (e){\n        // e.extra es el valor que nos manda el formulario Ej. 'gender'\n        const info=e.extra\n\n        //info=== 'gender'\n        //HarryPotter[info]==='male'\n        //Si es de tipo string, capitalizamos la primera letra ('Male'), sino solo mostramos la información (1970) \n        typeof(student[0][info])==='string'? setExtra(student[0][info].charAt(0).toUpperCase()+student[0][info].slice(1))\n        : setExtra(student[0][info])\n    }\n\n\n    return (\n        <div>\n            <NavBar/>\n          {student.map((character) => (\n                <div key={character.name}>\n                <CardProfileNameSearch>                \n                            <Name> {character.name}</Name>\n                    \n                    <CardProfile >\n                        <div style={{textAlign:'center'}}>\n                            <ImgCharProfile src={character.image} alt={character.name}/>\n                        </div>\n                        <InfoRow>\n\n                        {/* presentar información de nuestro personaje */}\n                        <DivSpace>\n                            <h3> General information</h3>\n                            <p><b>House:</b> {character.house? character.house: 'Not available'  }</p>\n                            <p><b>Birthday:</b> {character.dateOfBirth ? character.dateOfBirth: 'Not available' }</p>\n                            <p><b>Patronous:</b> {character.patronus ? character.patronus: 'Not available' }</p>\n                            <p><b>Blood:</b> {character.ancestry ? character.ancestry: 'Not available' }</p>\n                        </DivSpace>\n                        <DivSpace>\n                            <h3>Wand information</h3>\n                            <p><b>Core:</b> {character.wand.core? character.wand.core: 'Not available'}</p>\n                            <p><b>Length:</b> {character.wand.length? character.wand.length: 'Not available'}</p>\n                            <p><b>Wood:</b> {character.wand.wood? character.wand.wood: 'Not available'}</p>\n\n                        </DivSpace>\n                        </InfoRow>\n                            {/* Cambiamos la imagen para demostrar si está vivo o muerto */}\n                        {character.alive===true? \n                        <InfoColumn>\n                        <h1>Alive</h1>\n                        <Status src={'https://upload.wikimedia.org/wikipedia/commons/thumb/f/f1/Heart_corazón.svg/160px-Heart_corazón.svg.png'}/>\n                        </InfoColumn>: \n                        <InfoColumn>\n                        <h1>Dead</h1>\n                        <Status src={'https://i.pinimg.com/originals/9b/fb/f4/9bfbf45b1cb45e67d3e660de982ea9c0.png'}/>\n                        </InfoColumn>\n                        }                       \n                    </CardProfile>\n\n                    {/* buscador de información extra */}\n                    <ExtraInfos>\n                    <Form form={form} layout=\"vertical\" onFinish={submitForm } style={{width:'40vh'}}>\n                    <Form.Item name=\"extra\" label=\"Extra info\">                            \n                                <Select placeholder=\"What else so you want to know?\">\n                                <Select.Option value=\"gender\">Gender</Select.Option>\n                                <Select.Option value=\"yearOfBirth\">Year of birth</Select.Option>\n                                <Select.Option value=\"species\">Species</Select.Option>\n                                <Select.Option value=\"eyeColour\">Eye Colour</Select.Option>\n                                <Select.Option value=\"hairColour\">Hair Colour</Select.Option>\n                                <Select.Option value=\"actor\">Actor</Select.Option>\n                                </Select>\n                    </Form.Item>\n                        <Button type=\"primary\" block htmlType=\"submit\">\n                            Search\n                        </Button>\n                    </Form>\n                    \n                    <TextExtra>{extras}</TextExtra>\n                    </ExtraInfos>   \n                </CardProfileNameSearch>\n\n                </div>\n            ))}\n        </div>\n    )\n}\nexport default CharProfile\n\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Card, Logo, Form, Input, Button, Error, HPLogin, ButtonHarry, ButtonSnape, InfoRow} from \"../components/AuthForms\";\nimport { useAuth } from \"../context/auth\";\nimport { Divider } from \"antd\";\nimport NavBar from \"../components/NavBar\";\n\nfunction Login() {\n  //Hooks \n  //Para darle los permiso al usuario para hacer login según sus credenciales (staff/admin o estudiante)\n  const [isLoggedInAdmin, setLoggedInAdmin] = useState(false);\n  const [isLoggedInStud, setLoggedInStud] = useState(false);\n\n  // para crear un error si la información es incorrecta o nula\n  const [isError, setIsError] = useState(false);\n\n  // Para guardar la información del usuario \n  const [user, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n    // Para guardar la información que llega de la API (name, house, staff)\n  const { authTokens, setAuthTokens } = useAuth();\n\n\n\n  var myHeaders = new Headers({\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Expose-Headers': '*',\n    'Access-Control-Allow-Credentials': 'true',\n    'Content-Type': \"application/json, text/plain\",\n    'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE'\n  });\n  \n\n  const info ={\n    user:user,\n    password: password\n  }\n\n  //Mandar información a la API para hacer el Login y recibir los datos de nuestro usuario\n  function postLogin() {\n    fetch('https://ec2-52-37-61-68.us-west-2.compute.amazonaws.com:1234/api/v1/challenge/login', \n  {\n    method: 'POST', \n    body: info,\n    headers: myHeaders\n  }).then(result => {\n      if ( result.status===200 && result.data.staff===true) {\n        setAuthTokens(result.data);\n        setLoggedInAdmin(true);\n      }else if(result.status===200 && result.data.staff===false){\n        setAuthTokens(result.data);\n        setLoggedInStud(true)\n      }else{\n        setIsError(true);\n      }\n    }).catch(e => {\n      console.log('ver código en src/pages/Login 46 para ver solución temporal a CORS ')\n      // El API funciona, hace el login correctamente  y redirige al usuario a la página que le corresponde en Chrome o firefox\n      // sin embargo me encontré con un problem de CORS en Safari que es necesario solucionar en el backend.\n      //el código de abajo solo es un a solución rápida y temporal para hacer el login, pero el de arriba sí es funcional\n      if(user === 'snape@hogwarts.com' && password==='snape0109'){\n        setAuthTokens({\n          name: \"Severus Snape\",\n          house: \"Slytherin\",\n          staff: true\n      })\n      setLoggedInAdmin(true);\n      } else if(user === 'harry@hogwarts.com' && password==='harry3107'){\n        setAuthTokens({\n          name: \"Harry Potter\",\n          house: \"Gryffindor\",\n          staff: false\n      })\n      setLoggedInStud(true)\n      }else{\n        setIsError(true);\n\n      }\n    });\n  }\n\n  // funciones para hacer login rápido con imágenes de harry y snape\n    function loginHarry(){\n      setLoggedInStud(true)\n      setAuthTokens({ name: \"Harry Potter\", house: \"Gryffindor\", staff: false})\n    }\n    function loginSnape(){\n      setLoggedInAdmin(true)\n      setAuthTokens({ name: \"Severus Snape\", house: \"Slytherin\", staff: true})\n    }\n\n    if (isLoggedInAdmin){\n      return <Redirect to='/admin'/>\n    }else if (isLoggedInStud){\n      return <Redirect to='/student'/>\n    }\n\n\n  return (\n    <>\n    <NavBar/>\n    <HPLogin>\n    <Card>\n      <Logo src={'https://i.pinimg.com/originals/1e/39/03/1e390396d7381a36a73407df5cc02fb1.png'} />\n      <Form>\n      <h1>Login</h1>\n        <Input\n          type=\"user\"\n          value={user}\n          onChange={ e => {\n            setUserName(e.target.value);\n          }}\n          placeholder=\"user\"\n        />\n        <Input\n          type=\"password\"\n          value={password}\n          onChange={e => {\n            setPassword(e.target.value);\n          }}\n          placeholder=\"password\"\n        />\n\n        {/* si no hay usuario en sesión, hace login, sino manda a directorio */}\n        { !authTokens? \n        <Button onClick={postLogin}>Login</Button>: \n        authTokens.staff===true?  \n        (<Redirect to={\"/admin\"}/>):  \n        (<Redirect to={\"/student\"}/>)}\n\n      </Form>\n        { isError &&<Error>The username or password provided are incorrect!</Error> }\n        <Divider>or</Divider>\n        <InfoRow>\n          <ButtonHarry onClick={loginHarry}/>\n          <ButtonSnape onClick={loginSnape}/>\n        </InfoRow>\n    </Card>\n    </HPLogin>\n    </>\n  );\n}\n\nexport default Login;","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport PrivateRoute from './PrivateRoute';\nimport Home from \"./pages/Home\";\nimport Admin from \"./pages/Admin\"\nimport SwitchTo from \"./pages/SwitchTo\"\nimport Student from \"./pages/Student\"\nimport NotFound from \"./pages/NotFound\"\nimport CharProfile from \"./pages/CharProfile\";\nimport { AuthContext } from \"./context/auth\";\nimport Login from \"./pages/Login\";\n\nfunction App() {\n  const [authTokens, setAuthTokens] = useState();\n  \n  //Add out key name and value to localStorage\n  const setTokens = (data) => {\n    localStorage.setItem(\"tokens\", JSON.stringify(data));\n    setAuthTokens(data);\n  }\n\n  return (\n    //we send the state of our tokens through the context.provider\n    <AuthContext.Provider value={{ authTokens, setAuthTokens: setTokens }}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/switch\" component={SwitchTo} />\n          <PrivateRoute exact path=\"/admin\" component={Admin} />\n          <PrivateRoute exact path=\"/student\" component={Student} />\n          <PrivateRoute exact path=\"/char/:name\" component={CharProfile} />\n          <Route component={NotFound} />\n        </Switch>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}